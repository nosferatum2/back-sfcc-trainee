@import "~org/variables";
@import "bootstrap/scss/bootstrap";
@import "~org/bootstrapOverrides/buttons";

.pt_styleguide {
    .wrapper {
        margin: 1em;
    }

    .section {
        margin: 1em;
        padding: 0.2em 0 0.2em 1em;
        color: $gray-100;
        border-left: 3px solid $gray-300;
        background: none;
    }

    h3,
    h4 {
        &.sub-section {
            padding: 0.5em 0 0.5em 1em;
            margin: 1em 0;
            background: $gray-400;
        }
    }

    code {
        display: inline-block;
        margin: 1em 0 0.5em;
        padding: 0.3em;
        background: rgba($gray-400, 0.6);
        clear: both;

        span {
            font-weight: bold;
        }
    }

    .spec {
        color: $gray-200;
        margin-top: 0.5em;
    }

    .flex-container {
        display: flex;

        &.color,
        &.gradient,
        &.sg-shadows {
            flex-wrap: wrap;
            justify-content: space-between;
            text-align: center;

            .item {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                flex: 1 1 200px;
                margin: 0 1em 1em;

                > *:not(:first-child) {
                    flex: 1 1 100%;
                }
            }
        }

        &.sg-borders {
            flex-wrap: wrap;
            justify-content: space-between;

            .item {
                flex: 1 1 45%;
                margin: 0 5% 2em 0;

                &:last-child {
                    flex: 0 0 45%;
                }
            }
        }
    }

    .sg-type {
        .item {
            margin-bottom: 2em;

            > * {
                flex: 1 1 30%;
                margin-right: 1%;

                &:nth-child(2) {
                    align-self: start;
                }
            }
        }
    }

    .sg-buttons {
        .item {
            margin-bottom: 2em;

            .btn {
                margin-right: 2em;
            }
        }
    }
}

// Colors

.item {
    .color-block {
        position: relative;
        width: 200px;
        height: 200px;
        margin-bottom: 5px;
        color: $gray-600;
    }

    .color-var {
        text-align: center;
        margin-bottom: 10px;
    }

    .color-spec {
        text-align: center;
        line-height: 150%;
        margin-bottom: 10px;
    }

    .gradient-block {
        width: 200px;
        height: 200px;
        margin-bottom: 5px;

        // TODO - How do we want to organize these gradients?

        &.gradient-lin1 {
            @include gradient-directional($start-color: $california, $end-color: $pomegranate, $deg: 62deg);
        }

        &.gradient-lin2 {
            @include gradient-directional($start-color: $mustard, $end-color: $pomegranate, $deg: 90deg);
        }

        &.gradient-radial {
            @include gradient-radial($inner-color: $picton-blue, $outer-color: $indigo);
        }

        &.gradient-lin3 {
            @include gradient-x-three-colors($start-color: $cornflower-blue, $mid-color: $daisy-bush, $color-stop: 50%, $end-color: $cerulean-blue);
        }
    }

    .border-block {
        height: 30px;
    }

    .shadow-block {
        height: 200px;
        width: 200px;
    }
}

//TODO - optimize this
.main-colors {
    // Set the list of color blocks in order of how they should appear in the style guide.
    $colorlist: (
        $primary,
        $primary-light,
        $primary-dark,
        $secondary,
        $secondary-light
    );

    @for $i from 1 through length($colorlist) {
        $c: nth($colorlist, $i);

        .item:nth-child(#{$i}) .color-block {
            background-color: $c;
            border-radius: $border-radius;

            &::before {
                content: "#{$c}";
                color: $white;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                @if lightness($c) > 75 {
                    color: $gray-100;
                }
            }

            @if lightness($c) > lightness($light-gray) {
                border: 1px solid $gray-100;
            }
        }
    }
}

.accent-colors {
    // Set the list of color blocks in order of how they should appear in the style guide.
    $colorlist: (
        $accent-1,
        $accent-2,
        $accent-3,
        $accent-4
    );

    @for $i from 1 through length($colorlist) {
        $c: nth($colorlist, $i);

        .item:nth-child(#{$i}) .color-block {
            background-color: $c;
            border-radius: $border-radius;

            &::before {
                content: "#{$c}";
                color: $white;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                @if lightness($c) > 75 {
                    color: $gray-100;
                }
            }

            @if lightness($c) > lightness($light-gray) {
                border: 1px solid $gray-100;
            }
        }
    }
}

.gray-colors {
    // Set the list of color blocks in order of how they should appear in the style guide.
    $colorlist: (
        $black,
        $gray-100,
        $gray-200,
        $gray-300,
        $gray-400,
        $gray-500,
        $white
    );

    @for $i from 1 through length($colorlist) {
        $c: nth($colorlist, $i);

        .item:nth-child(#{$i}) .color-block {
            background-color: $c;
            border-radius: $border-radius;

            &::before {
                content: "#{$c}";
                color: $white;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                @if lightness($c) > 75 {
                    color: $gray-100;
                }
            }

            @if lightness($c) > lightness($light-gray) {
                border: 1px solid $gray-100;
            }
        }
    }
}

.sg-borders {
    // Set the list of border blocks in order of how they should appear in the style guide.
    $bordercolorlist: (
        $border-color,
        $border-color,
        $border2-color,
        $border3-color,
        $border4-color
    );

    @for $i from 1 through length($bordercolorlist) {
        $c: nth($bordercolorlist, $i);

        .item:nth-child(#{$i}) .border-block {
            border-color: $c;
            border-bottom: 1px solid $c;
            border-left: 1px solid $c;
        }

        .item:nth-child(2) .border-block {
            border-width: 4px;
        }
    }
}

.sg-shadows {
    // Set the list of shadow blocks in order of how they should appear in the style guide.
    $shadowlist: (
        $shadow,
        $shadow2,
        $shadow3
    );

    @for $i from 1 through length($shadowlist) {
        $c: nth($shadowlist, $i);

        .item:nth-child(#{$i}) .shadow-block {
            box-shadow: $c;
            border: $border;
            background: $white;
        }
    }
}

// Type

.label-xl {
    font-size: $font-size-lg;
}

.label-sm {
    font-size: $font-size-lg;
    font-weight: $font-weight-bold;
}

.label-xs {
    font-size: $font-size-xs;
    font-weight: $font-weight-bold;
    text-transform: uppercase;
}

// Links

a:hover {
    color: $primary;
}

.main-nav {
    font-size: $font-size-sm;
}

.link-primary {
    font-size: $font-size-sm;
    font-weight: $font-weight-bold;
}

.link-secondary {
    font-size: $font-size-xs;
    font-weight: $font-weight-bold;
    text-decoration: $link-decoration-alt;
}
